local rs = game:GetService("ReplicatedStorage")
local event = rs:WaitForChild("ReliableRedEvent")
local player = game.Players.LocalPlayer
local gui = player.PlayerGui:WaitForChild("ScreenGui") -- Assumes ScreenGui exists in PlayerGui

local args = {
    [1] = {},
    [2] = {
        ["/"] = {
            [1] = {
                [1] = "\1",
                [2] = "4d7ede51a",
                [3] = false,
                ["n"] = 3
            }
        }
    }
}

-- Create Stop Button
local stopButton = Instance.new("TextButton")
stopButton.Parent = gui
stopButton.Size = UDim2.new(0, 200, 0, 50)
stopButton.Position = UDim2.new(0, 50, 0, 50)
stopButton.Text = "Stop Reroll"

-- Create Continue Button
local continueButton = Instance.new("TextButton")
continueButton.Parent = gui
continueButton.Size = UDim2.new(0, 200, 0, 50)
continueButton.Position = UDim2.new(0, 50, 0, 120)
continueButton.Text = "Continue Reroll"

local isRunning = false -- Initially stopped
local forceStop = false -- New flag for force stopping

-- Button functionality
stopButton.MouseButton1Click:Connect(function()
    isRunning = false
    print("Reroll stopped by user.")
end)

continueButton.MouseButton1Click:Connect(function()
    if not forceStop then
        isRunning = true
        print("Reroll continued by user.")
    else
        print("Cannot continue. Reroll is forcefully stopped.")
    end
end)

-- Function to retrieve all traits
local function getAllTraits()
    local plr = game.Players.LocalPlayer
    local gui = plr.PlayerGui:WaitForChild("TraitReroll")
    local traitGui = gui:WaitForChild("trait")
    local traits = traitGui:WaitForChild("traits")

    local traitNames = {}

    for _, template in pairs(traits:GetChildren()) do
        if template:IsA("Frame") then
            local trait = template:FindFirstChild("name")
            if trait then
                table.insert(traitNames, trait.Text)
            else
                print("No trait found in this template")
            end
        end
    end

    return traitNames
end

-- Main reroll loop
while true do
    if isRunning then
        event:FireServer(unpack(args)) -- Fire the event with the arguments
        wait(0.2) -- Delay to avoid overloading

        local traits = getAllTraits() -- Retrieve current traits

        -- Log traits for debugging
        for _, trait in pairs(traits) do
            print("Current Trait:", trait)
        end

        -- Check for rare traits and stop reroll
        for _, trait in pairs(traits) do
            if trait == "Liege" or trait == "Godly" or trait == "Exclusive" then
                print("Got a rare trait (" .. trait .. ")! Forcefully stopping reroll.")
                isRunning = false
                forceStop = true -- Enforce stopping
                break
            end
        end

        if forceStop then
            break -- Exit the loop immediately
        end
    else
        wait(0.1) -- Wait before checking again
    end
end
